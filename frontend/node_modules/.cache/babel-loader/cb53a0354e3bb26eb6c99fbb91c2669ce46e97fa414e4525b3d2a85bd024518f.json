{"ast":null,"code":"import axios from \"axios\";\nimport { logout } from \"./shared/utils/auth\";\nconst apiClient = axios.create({\n  baseURL: \"http://34.129.48.12:5002/api\",\n  timeout: 1000\n});\napiClient.interceptors.request.use(config => {\n  const userDetails = localStorage.getItem('user');\n  if (userDetails) {\n    const token = JSON.parse(userDetails).token;\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, err => {\n  return Promise.reject(err);\n});\nexport const login = async data => {\n  try {\n    return await apiClient.post(\"/auth/login\", data);\n  } catch (exception) {\n    return {\n      error: true,\n      exception\n    };\n  }\n};\nexport const register = async data => {\n  try {\n    return await apiClient.post(\"/auth/register\", data);\n  } catch (exception) {\n    return {\n      error: true,\n      exception\n    };\n  }\n};\nconst checkResponseCode = exception => {\n  var _exception$response;\n  const responseCode = exception === null || exception === void 0 ? void 0 : (_exception$response = exception.response) === null || _exception$response === void 0 ? void 0 : _exception$response.status;\n  if (responseCode) {\n    (responseCode === 401 || responseCode === 403) && logout();\n  }\n};","map":{"version":3,"names":["axios","logout","apiClient","create","baseURL","timeout","interceptors","request","use","config","userDetails","localStorage","getItem","token","JSON","parse","headers","Authorization","err","Promise","reject","login","data","post","exception","error","register","checkResponseCode","_exception$response","responseCode","response","status"],"sources":["/Users/autumn/Learning/It_project/local_project/IT-Project/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\nimport { logout } from \"./shared/utils/auth\";\n\nconst apiClient = axios.create({\n    baseURL:\"http://34.129.48.12:5002/api\",\n    timeout: 1000,\n})\n\napiClient.interceptors.request.use((config) => {\n  const userDetails = localStorage.getItem('user');\n\n  if (userDetails) {\n    const token = JSON.parse(userDetails).token;\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, (err) => {\n    return Promise.reject(err);\n})\n\nexport const login = async (data) => {\n    try {\n        return await apiClient.post(\"/auth/login\", data);\n    } catch (exception) {\n        return {\n            error: true,\n            exception,\n        }\n    }\n}\n\nexport const register = async (data) => {\n    try {\n        return await apiClient.post(\"/auth/register\", data);\n    }catch (exception) {\n        return {\n            error: true,\n            exception,\n        }\n    }\n}\n\nconst checkResponseCode = (exception) => {\n    const responseCode = exception?.response?.status;\n\n    if (responseCode) {\n        (responseCode === 401 || responseCode === 403) && logout();\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,qBAAqB;AAE5C,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3BC,OAAO,EAAC,8BAA8B;EACtCC,OAAO,EAAE;AACb,CAAC,CAAC;AAEFH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC7C,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAEhD,IAAIF,WAAW,EAAE;IACf,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC,CAACG,KAAK;IAC3CJ,MAAM,CAACO,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;EAClD;EACA,OAAOJ,MAAM;AACf,CAAC,EAAGS,GAAG,IAAK;EACR,OAAOC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AAC9B,CAAC,CAAC;AAEF,OAAO,MAAMG,KAAK,GAAG,MAAOC,IAAI,IAAK;EACjC,IAAI;IACA,OAAO,MAAMpB,SAAS,CAACqB,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;EACpD,CAAC,CAAC,OAAOE,SAAS,EAAE;IAChB,OAAO;MACHC,KAAK,EAAE,IAAI;MACXD;IACJ,CAAC;EACL;AACJ,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAOJ,IAAI,IAAK;EACpC,IAAI;IACA,OAAO,MAAMpB,SAAS,CAACqB,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;EACvD,CAAC,QAAOE,SAAS,EAAE;IACf,OAAO;MACHC,KAAK,EAAE,IAAI;MACXD;IACJ,CAAC;EACL;AACJ,CAAC;AAED,MAAMG,iBAAiB,GAAIH,SAAS,IAAK;EAAA,IAAAI,mBAAA;EACrC,MAAMC,YAAY,GAAGL,SAAS,aAATA,SAAS,wBAAAI,mBAAA,GAATJ,SAAS,CAAEM,QAAQ,cAAAF,mBAAA,uBAAnBA,mBAAA,CAAqBG,MAAM;EAEhD,IAAIF,YAAY,EAAE;IACd,CAACA,YAAY,KAAK,GAAG,IAAIA,YAAY,KAAK,GAAG,KAAK5B,MAAM,CAAC,CAAC;EAC9D;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}